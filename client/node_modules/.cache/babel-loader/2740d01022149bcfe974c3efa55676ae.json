{"ast":null,"code":"var _jsxFileName = \"F:\\\\React\\\\freshproject\\\\Client\\\\src\\\\ProtectedRoute.jsx\";\nimport React from 'react';\nimport { Route, Navigate, Outlet } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  const token = localStorage.getItem('token');\n\n  if (token) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\n_c = Auth;\n\nconst ProtectedRoute = _ref => {\n  let {\n    element: Element,\n    ...rest\n  } = _ref;\n  const isAuthenticated = Auth();\n  return isAuthenticated ? /*#__PURE__*/_jsxDEV(Element, { ...rest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 28\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 52\n  }, this);\n};\n\n_c2 = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Auth\");\n$RefreshReg$(_c2, \"ProtectedRoute\");","map":{"version":3,"sources":["F:/React/freshproject/Client/src/ProtectedRoute.jsx"],"names":["React","Route","Navigate","Outlet","Auth","token","localStorage","getItem","ProtectedRoute","element","Element","rest","isAuthenticated"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,kBAAxC;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AACA,MAAIF,KAAJ,EAAW;AACT,WAAO,IAAP;AACD,GAFD,MAEO;AACL,WAAO,KAAP;AACD;AACF,CAPD;;KAAMD,I;;AASN,MAAMI,cAAc,GAAG,QAAmC;AAAA,MAAlC;AAAEC,IAAAA,OAAO,EAAEC,OAAX;AAAoB,OAAGC;AAAvB,GAAkC;AACxD,QAAMC,eAAe,GAAGR,IAAI,EAA5B;AAEA,SAAOQ,eAAe,gBAAG,QAAC,OAAD,OAAaD;AAAb;AAAA;AAAA;AAAA;AAAA,UAAH,gBAA2B,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UAAjD;AACD,CAJD;;MAAMH,c;AAMN,eAAeA,cAAf","sourcesContent":["import React from 'react';\nimport { Route, Navigate, Outlet } from 'react-router-dom';\n\nconst Auth = () => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nconst ProtectedRoute = ({ element: Element, ...rest }) => {\n  const isAuthenticated = Auth();\n\n  return isAuthenticated ? <Element {...rest} /> : <Navigate to=\"/login\" />;\n};\n\nexport default ProtectedRoute;\n"]},"metadata":{},"sourceType":"module"}