{"ast":null,"code":"var _jsxFileName = \"F:\\\\React\\\\freshproject\\\\src\\\\Components\\\\Elements\\\\Dropdown\\\\Dropdown.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\n\n// import styles of this component\nimport styles from \"./Dropdown.module.css\";\n\n// import other react pkg to use\nimport { ArrowUp3 } from \"iconsax-react\";\nimport { PropTypes } from 'prop-types';\n\n// import other component to use\nimport Button from \"../Button/Button\";\n\n// Dropdown Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dropdown = _ref => {\n  _s();\n  let {\n    items,\n    title,\n    liftingDdTextUp\n  } = _ref;\n  const [ddTitle, setDdTitle] = useState(title);\n  const [ddItemsState, setDdItem] = useState(items);\n  const ddItem = (ddId, ev) => {\n    const ddTitle = ev.target.innerHTML;\n    activeDropDownItem(ddId);\n    setDdTitle(ddTitle);\n    liftingDdTextUp && liftingDdTextUp(ddTitle);\n  };\n  const activeDropDownItem = dropdownItemId => {\n    setDdItem(prev => {\n      prev.forEach(item => item.active = false);\n      const myDd = prev.find(ddId => ddId.id === dropdownItemId);\n      myDd.active = true;\n      return [...prev];\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles[\"dropdown\"],\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      theme: \"transparent\",\n      className: \"flex align-items-center\",\n      children: [ddTitle, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles[\"dropdown-arrow-icon\"],\n        children: /*#__PURE__*/_jsxDEV(ArrowUp3, {\n          color: \"var(--green-400)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles[\"dropdown-menu\"],\n      children: ddItemsState.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `${styles[\"dropdown-item-menu\"]} ${item.active && styles.active}`,\n        onClick: ev => ddItem(item.id, ev),\n        children: item.title\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n// validate dropdown component props\n_s(Dropdown, \"jiwVW3dJtJ+CzjSK9RaqVGfGdv0=\");\n_c = Dropdown;\nDropdown.propTypes = {\n  items: PropTypes.array,\n  title: PropTypes.string,\n  liftingDdTextUp: PropTypes.func\n};\nexport default Dropdown;\nvar _c;\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"names":["useState","styles","ArrowUp3","PropTypes","Button","jsxDEV","_jsxDEV","Dropdown","_ref","_s","items","title","liftingDdTextUp","ddTitle","setDdTitle","ddItemsState","setDdItem","ddItem","ddId","ev","target","innerHTML","activeDropDownItem","dropdownItemId","prev","forEach","item","active","myDd","find","id","className","children","theme","color","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","_c","propTypes","array","string","func","$RefreshReg$"],"sources":["F:/React/freshproject/src/Components/Elements/Dropdown/Dropdown.jsx"],"sourcesContent":["import { useState } from \"react\"\n\n// import styles of this component\nimport styles from \"./Dropdown.module.css\"\n\n// import other react pkg to use\nimport { ArrowUp3 } from \"iconsax-react\"\nimport { PropTypes } from 'prop-types';\n\n// import other component to use\nimport Button from \"../Button/Button\"\n\n// Dropdown Component\nconst Dropdown = ({ items, title, liftingDdTextUp }) => {\n  const [ ddTitle, setDdTitle ] = useState(title)\n  const [ddItemsState, setDdItem] = useState(items)\n\n  const ddItem = (ddId, ev) => {\n    const ddTitle = ev.target.innerHTML\n    activeDropDownItem(ddId)\n    setDdTitle(ddTitle)\n    liftingDdTextUp && liftingDdTextUp(ddTitle)\n  }\n    \n  const activeDropDownItem = (dropdownItemId) => {\n    setDdItem(prev => {\n      prev.forEach(item => item.active = false)\n      const myDd = prev.find(ddId => ddId.id === dropdownItemId)\n      myDd.active = true\n      return [ ...prev ]\n    })\n  }\n\n  return (\n    <div className={styles[\"dropdown\"]}>\n      <Button theme=\"transparent\" className=\"flex align-items-center\">\n        { ddTitle }\n        <span className={styles[\"dropdown-arrow-icon\"]}>\n          <ArrowUp3 color=\"var(--green-400)\" />\n        </span>\n      </Button>\n      <ul className={styles[\"dropdown-menu\"]}>\n        {ddItemsState.map(item => (\n          <li \n            key={item.id}\n            className={`${styles[\"dropdown-item-menu\"]} ${item.active && styles.active}`}\n            onClick={(ev) => ddItem(item.id, ev)}>\n              { item.title }\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\n// validate dropdown component props\nDropdown.propTypes  = {\n  items: PropTypes.array,\n  title: PropTypes.string,\n  liftingDdTextUp: PropTypes.func\n}\n\nexport default Dropdown"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}