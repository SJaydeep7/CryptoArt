{"ast":null,"code":"var _jsxFileName = \"F:\\\\React\\\\freshproject\\\\Client\\\\src\\\\CRUD\\\\Create.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Create() {\n  _s();\n\n  const [currentImageId, setCurrentImageId] = useState(1);\n  const [imageId, setImageId] = useState(`wallpaper ${currentImageId}`);\n  const [creatorName, setCreatorName] = useState('');\n  const [creatorJob, setCreatorJob] = useState('');\n  const [creatorPhoto, setCreatorPhoto] = useState(null);\n\n  const generateJSON = () => {\n    const imageSrc = `img/wallpapers/${currentImageId}.jfif`;\n    const creatorPhotoSrc = `img/profile/${currentImageId}.png`;\n    const jsonData = {\n      id: imageId,\n      src: imageSrc,\n      creator: {\n        src: creatorPhotoSrc,\n        name: creatorName,\n        job: creatorJob\n      }\n    };\n    console.log(jsonData); // You can send this JSON data to your server using fetch or other methods.\n\n    setCurrentImageId(currentImageId + 1); // Increment the image ID for the next entry.\n\n    setImageId(`wallpaper ${currentImageId + 1}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"imageId\",\n      children: \"Image ID:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"imageId\",\n      name: \"imageId\",\n      value: imageId,\n      readOnly: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 87\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 93\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"imageFile\",\n      children: \"Upload Image:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"imageFile\",\n      name: \"imageFile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 66\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 72\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"creatorName\",\n      children: \"Image Creator Name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"creatorName\",\n      name: \"creatorName\",\n      value: creatorName,\n      onChange: e => setCreatorName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 139\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 145\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"creatorPhoto\",\n      children: \"Image Creator Photo:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"creatorPhoto\",\n      name: \"creatorPhoto\",\n      onChange: e => setCreatorPhoto(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 125\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 131\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"creatorJob\",\n      children: \"Image Creator Job:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"creatorJob\",\n      name: \"creatorJob\",\n      value: creatorJob,\n      onChange: e => setCreatorJob(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 135\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 141\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: generateJSON,\n      children: \"Generate JSON\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Create, \"HBZASTljVtUlL0d3cllEglu+g6g=\");\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["F:/React/freshproject/Client/src/CRUD/Create.js"],"names":["React","useState","Create","currentImageId","setCurrentImageId","imageId","setImageId","creatorName","setCreatorName","creatorJob","setCreatorJob","creatorPhoto","setCreatorPhoto","generateJSON","imageSrc","creatorPhotoSrc","jsonData","id","src","creator","name","job","console","log","e","target","value","files"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './'\r\n\r\nfunction Create() {\r\n    const [currentImageId, setCurrentImageId] = useState(1);\r\n    const [imageId, setImageId] = useState(`wallpaper ${currentImageId}`);\r\n    const [creatorName, setCreatorName] = useState('');\r\n    const [creatorJob, setCreatorJob] = useState('');\r\n    const [creatorPhoto, setCreatorPhoto] = useState(null);\r\n    \r\n    const generateJSON = () => {\r\n        const imageSrc = `img/wallpapers/${currentImageId}.jfif`;\r\n        const creatorPhotoSrc = `img/profile/${currentImageId}.png`;\r\n        \r\n        const jsonData = {\r\n            id: imageId,\r\n            src: imageSrc,\r\n            creator: {\r\n                src: creatorPhotoSrc,\r\n                name: creatorName,\r\n                job: creatorJob\r\n            }\r\n        };\r\n        \r\n        console.log(jsonData); // You can send this JSON data to your server using fetch or other methods.\r\n        \r\n        setCurrentImageId(currentImageId + 1); // Increment the image ID for the next entry.\r\n        setImageId(`wallpaper ${currentImageId + 1}`);\r\n    };\r\n\r\n    return (\r\n        <div className='create'>\r\n            <label htmlFor=\"imageId\">Image ID:</label>\r\n            <input type=\"text\" id=\"imageId\" name=\"imageId\" value={imageId} readOnly /><br /><br />\r\n\r\n            <label htmlFor=\"imageFile\">Upload Image:</label>\r\n            <input type=\"file\" id=\"imageFile\" name=\"imageFile\" /><br /><br />\r\n\r\n            <label htmlFor=\"creatorName\">Image Creator Name:</label>\r\n            <input type=\"text\" id=\"creatorName\" name=\"creatorName\" value={creatorName} onChange={(e) => setCreatorName(e.target.value)} /><br /><br />\r\n\r\n            <label htmlFor=\"creatorPhoto\">Image Creator Photo:</label>\r\n            <input type=\"file\" id=\"creatorPhoto\" name=\"creatorPhoto\" onChange={(e) => setCreatorPhoto(e.target.files[0])} /><br /><br />\r\n\r\n            <label htmlFor=\"creatorJob\">Image Creator Job:</label>\r\n            <input type=\"text\" id=\"creatorJob\" name=\"creatorJob\" value={creatorJob} onChange={(e) => setCreatorJob(e.target.value)} /><br /><br />\r\n\r\n            <button type=\"button\" onClick={generateJSON}>Generate JSON</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Create;\r\n"]},"metadata":{},"sourceType":"module"}