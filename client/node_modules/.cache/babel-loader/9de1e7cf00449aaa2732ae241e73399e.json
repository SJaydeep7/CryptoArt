{"ast":null,"code":"var _jsxFileName = \"F:\\\\React\\\\FinalProject-main\\\\client\\\\src\\\\redirection\\\\admin\\\\ImageFetchForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './ImageFetchForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ImageFetchForm = () => {\n  _s();\n\n  const [images, setImages] = useState([]);\n  const [editingImage, setEditingImage] = useState(null);\n  const [newName, setNewName] = useState('');\n  const [newJobPost, setNewJobPost] = useState('');\n\n  const fetchImages = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/images');\n      setImages(response.data);\n    } catch (error) {\n      console.error('Error fetching images:', error);\n    }\n  };\n\n  const handleDelete = async imageName => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/delete', {\n        imageName\n      });\n      console.log('Image deleted:', response.data);\n      fetchImages();\n    } catch (error) {\n      console.error('Error deleting image:', error);\n    }\n  };\n\n  const enableEditing = imageName => {\n    setEditingImage(imageName);\n    const image = images.find(img => img.imageName === imageName);\n    setNewName(image.name);\n    setNewJobPost(image.jobPost);\n  };\n\n  const handleUpdate = async imageName => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/update', {\n        imageName,\n        newName,\n        newJobPost\n      });\n      console.log('Image updated:', response.data);\n      setEditingImage(null);\n      setNewName('');\n      setNewJobPost('');\n      fetchImages();\n    } catch (error) {\n      console.error('Error updating image:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchImages();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-list\",\n    children: images.map(image => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: image.imagePath,\n        alt: image.imageName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            color: 'white'\n          },\n          children: [\"Uploader Name: \", image.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'white'\n          },\n          children: [\"Uploader Job Post: \", image.jobPost]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), editingImage === image.imageName ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"New Name\",\n            value: newName,\n            onChange: e => setNewName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"New Job Post\",\n            value: newJobPost,\n            onChange: e => setNewJobPost(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"update-button\",\n            onClick: () => handleUpdate(image.imageName),\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"edit-button\",\n          onClick: () => enableEditing(image.imageName),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"delete-button\",\n        onClick: () => handleDelete(image.imageName),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, image._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ImageFetchForm, \"UpaBk6lzc/19uWvyBA79GTBZn7U=\");\n\n_c = ImageFetchForm;\nexport default ImageFetchForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageFetchForm\");","map":{"version":3,"sources":["F:/React/FinalProject-main/client/src/redirection/admin/ImageFetchForm.jsx"],"names":["React","useState","useEffect","axios","ImageFetchForm","images","setImages","editingImage","setEditingImage","newName","setNewName","newJobPost","setNewJobPost","fetchImages","response","get","data","error","console","handleDelete","imageName","post","log","enableEditing","image","find","img","name","jobPost","handleUpdate","map","imagePath","color","e","target","value","_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './ImageFetchForm.css';\n\nconst ImageFetchForm = () => {\n  const [images, setImages] = useState([]);\n  const [editingImage, setEditingImage] = useState(null);\n  const [newName, setNewName] = useState('');\n  const [newJobPost, setNewJobPost] = useState('');\n\n  const fetchImages = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/images');\n      setImages(response.data);\n    } catch (error) {\n      console.error('Error fetching images:', error);\n    }\n  };\n\n  const handleDelete = async (imageName) => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/delete', { imageName });\n      console.log('Image deleted:', response.data);\n      fetchImages();\n    } catch (error) {\n      console.error('Error deleting image:', error);\n    }\n  };\n  const enableEditing = (imageName) => {\n    setEditingImage(imageName);\n    const image = images.find((img) => img.imageName === imageName);\n    setNewName(image.name);\n    setNewJobPost(image.jobPost);\n  };\n  \n  const handleUpdate = async (imageName) => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/update', {\n        imageName,\n        newName,\n        newJobPost,\n      });\n      console.log('Image updated:', response.data);\n      setEditingImage(null);\n      setNewName('');\n      setNewJobPost('');\n      fetchImages();\n    } catch (error) {\n      console.error('Error updating image:', error);\n    }\n  };\n\n\n  useEffect(() => {\n    fetchImages();\n  }, []);\n\n  return (\n    <div className=\"image-list\">\n      {images.map((image) => (\n        <div className=\"image-card\" key={image._id}>\n          <img src={image.imagePath} alt={image.imageName} />\n          <div className=\"image-info\">\n            <h3 style={{ color: 'white' }}>Uploader Name: {image.name}</h3>\n            <p style={{ color: 'white' }}>Uploader Job Post: {image.jobPost}</p>\n\n            {editingImage === image.imageName ? (\n              <div>\n                <input\n                  type=\"text\"\n                  placeholder=\"New Name\"\n                  value={newName}\n                  onChange={(e) => setNewName(e.target.value)}\n                />\n                <input\n                  type=\"text\"\n                  placeholder=\"New Job Post\"\n                  value={newJobPost}\n                  onChange={(e) => setNewJobPost(e.target.value)}\n                />\n                <button\n                  className=\"update-button\"\n                  onClick={() => handleUpdate(image.imageName)}\n                >\n                  Update\n                </button>\n              </div>\n            ) : (\n              <button\n                className=\"edit-button\"\n                onClick={() => enableEditing(image.imageName)}\n              >\n                Edit\n              </button>\n            )}\n          </div>\n          <button className=\"delete-button\" onClick={() => handleDelete(image.imageName)}>\n            Delete\n          </button>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ImageFetchForm;\n"]},"metadata":{},"sourceType":"module"}