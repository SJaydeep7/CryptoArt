{"ast":null,"code":"var _jsxFileName = \"F:\\\\React\\\\freshproject\\\\Client\\\\src\\\\Components\\\\MasonryLayout\\\\MasonryBox\\\\MasonryBox.jsx\",\n    _s = $RefreshSig$();\n\nMasonaryBox.js;\nimport React, { useState } from 'react';\nimport axios from 'axios'; // Import Axios library\n\nimport styles from \"./MasonryBox.module.css\";\nimport { PropTypes } from 'prop-types';\nimport Download from \"./Download.png\";\nimport Delete from './Delete.png';\nimport Edit from \"./Edit.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MasonryBox = _ref => {\n  _s();\n\n  let {\n    wallSrc,\n    userProf,\n    userName,\n    userJob,\n    Links\n  } = _ref;\n  const [editing, setEditing] = useState(false);\n  const [editedName, setEditedName] = useState(userName);\n  const [editedJob, setEditedJob] = useState(userJob);\n\n  const handleEditClick = () => {\n    setEditing(true);\n  };\n\n  const handleCancelEdit = () => {\n    setEditing(false);\n    setEditedName(userName);\n    setEditedJob(userJob);\n  };\n\n  const handleSaveEdit = () => {\n    axios.post('http://localhost:5000/api/update', {\n      name: editedName,\n      jobPost: editedJob\n    }).then(response => {\n      console.log(\"Updated successfully\");\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles[\"my-masonry\"],\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: wallSrc,\n      style: {\n        width: \"100%\"\n      },\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles[\"my-masnry-description\"]} flex`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles[\"my-masnry-user-box\"]} flex align-items-center`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"my-masnry-user-prof\"],\n          children: editing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: editedName,\n              onChange: e => setEditedName(e.target.value),\n              placeholder: \"Image Creator Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: editedJob,\n              onChange: e => setEditedJob(e.target.value),\n              placeholder: \"Image Creator Job\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSaveEdit,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleCancelEdit,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Edit,\n            alt: \"\",\n            onClick: handleEditClick,\n            className: styles[\"edit\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles[\"my-masnry-user-prof-desc\"]} flex flex-column`,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: editedName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: editedJob\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Delete,\n        alt: \"\",\n        className: styles[\"download\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: Links,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Download,\n          alt: \"\",\n          className: styles[\"download\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MasonryBox, \"Z7bgFN67w2pRyxYJuptsIBm/c+4=\");\n\n_c = MasonryBox;\nMasonryBox.propTypes = {\n  wallSrc: PropTypes.string.isRequired,\n  userProf: PropTypes.string.isRequired,\n  userName: PropTypes.string.isRequired,\n  userJob: PropTypes.string.isRequired,\n  Links: PropTypes.string.isRequired\n};\nexport default MasonryBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"MasonryBox\");","map":{"version":3,"sources":["F:/React/freshproject/Client/src/Components/MasonryLayout/MasonryBox/MasonryBox.jsx"],"names":["MasonaryBox","js","React","useState","axios","styles","PropTypes","Download","Delete","Edit","MasonryBox","wallSrc","userProf","userName","userJob","Links","editing","setEditing","editedName","setEditedName","editedJob","setEditedJob","handleEditClick","handleCancelEdit","handleSaveEdit","post","name","jobPost","then","response","console","log","catch","error","width","e","target","value","propTypes","string","isRequired"],"mappings":";;;AAAAA,WAAW,CAACC,EAAZ;AAGA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAA2B;;AAC3B,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,IAAP,MAAiB,YAAjB;;;;AAGA,MAAMC,UAAU,GAAG,QAAqD;AAAA;;AAAA,MAApD;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA,QAArB;AAA+BC,IAAAA,OAA/B;AAAwCC,IAAAA;AAAxC,GAAoD;AACtE,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACe,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAACU,QAAD,CAA5C;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAACW,OAAD,CAA1C;;AAEA,QAAMQ,eAAe,GAAG,MAAM;AAC5BL,IAAAA,UAAU,CAAC,IAAD,CAAV;AAED,GAHD;;AAKA,QAAMM,gBAAgB,GAAG,MAAM;AAC7BN,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,IAAAA,aAAa,CAACN,QAAD,CAAb;AACAQ,IAAAA,YAAY,CAACP,OAAD,CAAZ;AACD,GAJD;;AAMA,QAAMU,cAAc,GAAG,MAAM;AAC3BpB,IAAAA,KAAK,CAACqB,IAAN,CAAW,kCAAX,EAA+C;AAE7CC,MAAAA,IAAI,EAAER,UAFuC;AAG7CS,MAAAA,OAAO,EAAEP;AAHoC,KAA/C,EAKCQ,IALD,CAKMC,QAAQ,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD,KAPD,EAQCC,KARD,CAQOC,KAAK,IAAI;AACdH,MAAAA,OAAO,CAACG,KAAR,CAAcA,KAAd;AACD,KAVD;AAWD,GAZD;;AAaA,sBACE;AAAK,IAAA,SAAS,EAAE5B,MAAM,CAAC,YAAD,CAAtB;AAAA,4BACE;AAAK,MAAA,GAAG,EAAEM,OAAV;AAAmB,MAAA,KAAK,EAAE;AAAEuB,QAAAA,KAAK,EAAE;AAAT,OAA1B;AAA6C,MAAA,GAAG,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAG,GAAE7B,MAAM,CAAC,uBAAD,CAA0B,OAAnD;AAAA,8BACE;AAAK,QAAA,SAAS,EAAG,GAAEA,MAAM,CAAC,oBAAD,CAAuB,0BAAhD;AAAA,gCACE;AAAK,UAAA,SAAS,EAAEA,MAAM,CAAC,qBAAD,CAAtB;AAAA,oBACGW,OAAO,gBACN;AAAA,oCACE;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,KAAK,EAAEE,UAFT;AAGE,cAAA,QAAQ,EAAEiB,CAAC,IAAIhB,aAAa,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAH9B;AAIE,cAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,oBADF,eAOE;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,KAAK,EAAEjB,SAFT;AAGE,cAAA,QAAQ,EAAEe,CAAC,IAAId,YAAY,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV,CAH7B;AAIE,cAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,oBAPF,eAaE;AAAQ,cAAA,OAAO,EAAEb,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbF,eAcE;AAAQ,cAAA,OAAO,EAAED,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAdF;AAAA,0BADM,gBAkBN;AACE,YAAA,GAAG,EAAEd,IADP;AAEE,YAAA,GAAG,EAAC,EAFN;AAGE,YAAA,OAAO,EAAEa,eAHX;AAIE,YAAA,SAAS,EAAEjB,MAAM,CAAC,MAAD;AAJnB;AAAA;AAAA;AAAA;AAAA;AAnBJ;AAAA;AAAA;AAAA;AAAA,gBADF,eA4BE;AAAK,UAAA,SAAS,EAAG,GAAEA,MAAM,CAAC,0BAAD,CAA6B,mBAAtD;AAAA,kCACE;AAAA,sBAAKa;AAAL;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAKE;AAAL;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAkCE;AAAK,QAAA,GAAG,EAAEZ,MAAV;AAAkB,QAAA,GAAG,EAAC,EAAtB;AAAyB,QAAA,SAAS,EAAEH,MAAM,CAAC,UAAD;AAA1C;AAAA;AAAA;AAAA;AAAA,cAlCF,eAmCE;AAAG,QAAA,IAAI,EAAEU,KAAT;AAAA,+BACE;AAAK,UAAA,GAAG,EAAER,QAAV;AAAoB,UAAA,GAAG,EAAC,EAAxB;AAA2B,UAAA,SAAS,EAAEF,MAAM,CAAC,UAAD;AAA5C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAnCF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4CD,CAzED;;GAAMK,U;;KAAAA,U;AA2ENA,UAAU,CAAC4B,SAAX,GAAuB;AACrB3B,EAAAA,OAAO,EAAEL,SAAS,CAACiC,MAAV,CAAiBC,UADL;AAErB5B,EAAAA,QAAQ,EAAEN,SAAS,CAACiC,MAAV,CAAiBC,UAFN;AAGrB3B,EAAAA,QAAQ,EAAEP,SAAS,CAACiC,MAAV,CAAiBC,UAHN;AAIrB1B,EAAAA,OAAO,EAAER,SAAS,CAACiC,MAAV,CAAiBC,UAJL;AAKrBzB,EAAAA,KAAK,EAAET,SAAS,CAACiC,MAAV,CAAiBC;AALH,CAAvB;AAQA,eAAe9B,UAAf","sourcesContent":["MasonaryBox.js\n\n\nimport React, { useState } from 'react';\nimport axios from 'axios'; // Import Axios library\nimport styles from \"./MasonryBox.module.css\"\nimport { PropTypes } from 'prop-types';\nimport Download from \"./Download.png\";\nimport Delete from './Delete.png';\nimport Edit from \"./Edit.png\";\n\n\nconst MasonryBox = ({ wallSrc, userProf, userName, userJob, Links }) => {\n  const [editing, setEditing] = useState(false);\n  const [editedName, setEditedName] = useState(userName);\n  const [editedJob, setEditedJob] = useState(userJob);\n\n  const handleEditClick = () => {\n    setEditing(true);\n\n  };\n\n  const handleCancelEdit = () => {\n    setEditing(false);\n    setEditedName(userName);\n    setEditedJob(userJob);\n  };\n\n  const handleSaveEdit = () => {\n    axios.post('http://localhost:5000/api/update', {\n   \n      name: editedName,\n      jobPost: editedJob,\n    })\n    .then(response => {\n      console.log(\"Updated successfully\");\n    })\n    .catch(error => {\n      console.error(error);\n    });\n  };\n  return (\n    <div className={styles[\"my-masonry\"]}>\n      <img src={wallSrc} style={{ width: \"100%\" }} alt=\"\" />\n      <div className={`${styles[\"my-masnry-description\"]} flex`}>\n        <div className={`${styles[\"my-masnry-user-box\"]} flex align-items-center`}>\n          <div className={styles[\"my-masnry-user-prof\"]}>\n            {editing ? (\n              <>\n                <input\n                  type=\"text\"\n                  value={editedName}\n                  onChange={e => setEditedName(e.target.value)}\n                  placeholder=\"Image Creator Name\"\n                />\n                <input\n                  type=\"text\"\n                  value={editedJob}\n                  onChange={e => setEditedJob(e.target.value)}\n                  placeholder=\"Image Creator Job\"\n                />\n                <button onClick={handleSaveEdit}>Save</button>\n                <button onClick={handleCancelEdit}>Cancel</button>\n              </>\n            ) : (\n              <img\n                src={Edit}\n                alt=\"\"\n                onClick={handleEditClick}\n                className={styles[\"edit\"]}\n              />\n            )}\n          </div>\n          <div className={`${styles[\"my-masnry-user-prof-desc\"]} flex flex-column`}>\n            <h1>{editedName}</h1>\n            <h3>{editedJob}</h3>\n          </div>\n        </div>\n        <img src={Delete} alt=\"\" className={styles[\"download\"]} />\n        <a href={Links}>\n          <img src={Download} alt=\"\" className={styles[\"download\"]} />\n        </a>\n      </div>\n    </div>\n  );\n}\n\nMasonryBox.propTypes = {\n  wallSrc: PropTypes.string.isRequired,\n  userProf: PropTypes.string.isRequired,\n  userName: PropTypes.string.isRequired,\n  userJob: PropTypes.string.isRequired,\n  Links: PropTypes.string.isRequired,\n}\n\nexport default MasonryBox;"]},"metadata":{},"sourceType":"module"}