{"ast":null,"code":"var _jsxFileName = \"F:\\\\React\\\\FinalProject-main\\\\client\\\\src\\\\Components\\\\MasonryLayout\\\\MasonryBox\\\\MasonryBox.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios'; // Import Axios library\n\nimport styles from \"./MasonryBox.module.css\";\nimport { PropTypes } from 'prop-types';\nimport Download from \"./Download.png\";\nimport Delete from './Delete.png';\nimport Edit from \"./Edit.png\";\nimport \"./mybutton.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MasonryBox = _ref => {\n  _s();\n\n  let {\n    wallSrc,\n    userName,\n    userJob,\n    Links\n  } = _ref;\n  const [editing, setEditing] = useState(false);\n  const [editedName, setEditedName] = useState(userName);\n  const [editedJob, setEditedJob] = useState(userJob);\n\n  const handleEditClick = () => {\n    setEditing(true);\n  };\n\n  const handleCancelEdit = () => {\n    setEditing(false);\n    setEditedName(userName);\n    setEditedJob(userJob);\n  };\n\n  const handleSaveEdit = async imageName => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/update', {\n        imageName,\n        name: editedName,\n        jobPost: editedJob\n      });\n      console.log('Image updated:', response.data);\n      setEditingImage(null);\n      setNewName('');\n      setNewJobPost('');\n      fetchImages();\n    } catch (error) {\n      console.error('Error updating image:', error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles[\"my-masonry\"],\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: wallSrc,\n      style: {\n        width: \"100%\"\n      },\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles[\"my-masnry-description\"]} flex`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles[\"my-masnry-user-box\"]} flex align-items-center`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"my-masnry-user-prof\"],\n          children: editing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button2\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"myinput\",\n                type: \"text\",\n                value: editedName,\n                onChange: e => setEditedName(e.target.value),\n                placeholder: \"Image Creator Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"myinput\",\n                value: editedJob,\n                onChange: e => setEditedJob(e.target.value),\n                placeholder: \"Image Creator Job\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mybutton2\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"mybutton\",\n                  onClick: handleSaveEdit,\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"mybutton\",\n                  onClick: handleCancelEdit,\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 13\n            }, this)\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Edit,\n            alt: \"\",\n            onClick: handleEditClick,\n            className: styles[\"edit\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles[\"my-masnry-user-prof-desc\"]} flex flex-column`,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: editedName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: editedJob\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Delete,\n        alt: \"\",\n        className: styles[\"download\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: Links,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Download,\n          alt: \"\",\n          className: styles[\"download\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MasonryBox, \"Z7bgFN67w2pRyxYJuptsIBm/c+4=\");\n\n_c = MasonryBox;\nMasonryBox.propTypes = {\n  wallSrc: PropTypes.string.isRequired,\n  userName: PropTypes.string.isRequired,\n  userJob: PropTypes.string.isRequired,\n  Links: PropTypes.string.isRequired\n};\nexport default MasonryBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"MasonryBox\");","map":{"version":3,"sources":["F:/React/FinalProject-main/client/src/Components/MasonryLayout/MasonryBox/MasonryBox.jsx"],"names":["React","useState","axios","styles","PropTypes","Download","Delete","Edit","MasonryBox","wallSrc","userName","userJob","Links","editing","setEditing","editedName","setEditedName","editedJob","setEditedJob","handleEditClick","handleCancelEdit","handleSaveEdit","imageName","response","post","name","jobPost","console","log","data","setEditingImage","setNewName","setNewJobPost","fetchImages","error","width","e","target","value","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios'; // Import Axios library\nimport styles from \"./MasonryBox.module.css\"\nimport { PropTypes } from 'prop-types';\nimport Download from \"./Download.png\";\nimport Delete from './Delete.png';\nimport Edit from \"./Edit.png\";\nimport \"./mybutton.css\";\n\n\nconst MasonryBox = ({ wallSrc, userName, userJob, Links }) => {\n  const [editing, setEditing] = useState(false);\n  const [editedName, setEditedName] = useState(userName);\n  const [editedJob, setEditedJob] = useState(userJob);\n\n  const handleEditClick = () => {\n    setEditing(true);\n    \n\n  };\n\n  const handleCancelEdit = () => {\n    setEditing(false);\n    setEditedName(userName);\n    setEditedJob(userJob);\n  };\n\n\n   \n    const handleSaveEdit = async (imageName) => {\n      try {\n        const response = await axios.post('http://localhost:5000/api/update', {\n          imageName,\n          name: editedName,\n          jobPost: editedJob\n        });\n        console.log('Image updated:', response.data);\n        setEditingImage(null);\n        setNewName('');\n        setNewJobPost('');\n        fetchImages();\n      } catch (error) {\n        console.error('Error updating image:', error);\n      }\n    };\n  return (\n    <div className={styles[\"my-masonry\"]}>\n      <img src={wallSrc} style={{ width: \"100%\" }} alt=\"\" />\n      <div className={`${styles[\"my-masnry-description\"]} flex`}>\n        <div className={`${styles[\"my-masnry-user-box\"]} flex align-items-center`}>\n          <div className={styles[\"my-masnry-user-prof\"]}>\n            {editing ? (\n              <>\n            \n            <div className='button2'>\n                <input className='myinput'\n                  type=\"text\"\n                  value={editedName}\n                  onChange={e => setEditedName(e.target.value)}\n                  placeholder=\"Image Creator Name\"\n                />\n                <input\n                  type=\"text\" className='myinput'\n                  value={editedJob}\n                  onChange={e => setEditedJob(e.target.value)}\n                  placeholder=\"Image Creator Job\"\n                />\n            <div className=\"mybutton2\">\n                <button className=\"mybutton\"onClick={handleSaveEdit}>Save</button>\n                <button className=\"mybutton\"onClick={handleCancelEdit}>Cancel</button>\n                </div>\n                </div>\n                \n              </>\n            ) : (\n              <img\n                src={Edit}\n                alt=\"\"\n                onClick={handleEditClick}\n                className={styles[\"edit\"]}\n              />\n            )}\n          </div>\n          \n          <div className={`${styles[\"my-masnry-user-prof-desc\"]} flex flex-column`}>\n            <h1>{editedName}</h1>\n            <h3>{editedJob}</h3>\n            \n          </div>\n        </div>\n        <img src={Delete} alt=\"\" className={styles[\"download\"]} />\n        <a href={Links}>\n          <img src={Download} alt=\"\" className={styles[\"download\"]} />\n        </a>     \n  \n\n      </div>\n    </div>\n  );\n}\n\nMasonryBox.propTypes = {\n  wallSrc: PropTypes.string.isRequired,\n  userName: PropTypes.string.isRequired,\n  userJob: PropTypes.string.isRequired,\n  Links: PropTypes.string.isRequired,\n}\n\nexport default MasonryBox;"]},"metadata":{},"sourceType":"module"}