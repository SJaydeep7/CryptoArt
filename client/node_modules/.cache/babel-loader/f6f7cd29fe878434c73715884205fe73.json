{"ast":null,"code":"var _jsxFileName = \"F:\\\\React\\\\FinalProject-main\\\\client\\\\src\\\\Components\\\\MasonryLayout\\\\MasonryBox\\\\MasonryBox.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // Import Axios library\n\nimport styles from \"./MasonryBox.module.css\";\nimport { PropTypes } from 'prop-types';\nimport Download from \"./Download.png\";\nimport Delete from './Delete.png';\nimport Edit from \"./Edit.png\";\nimport \"./mybutton.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MasonryBox = _ref => {\n  _s();\n\n  let {\n    wallSrc,\n    userName,\n    userJob,\n    Links\n  } = _ref;\n  const [editing, setEditing] = useState(false);\n  const [editedName, setEditedName] = useState(userName);\n  const [editedJob, setEditedJob] = useState(userJob);\n  const [images, setImages] = useState([]);\n  const [editingImage, setEditingImage] = useState(null);\n  const [newName, setNewName] = useState('');\n  const [newJobPost, setNewJobPost] = useState('');\n\n  const fetchImages = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/images');\n      setImages(response.data);\n    } catch (error) {\n      console.error('Error fetching images:', error);\n    }\n  };\n\n  const handleDelete = async imageName => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/delete', {\n        imageName\n      });\n      console.log('Image deleted:', response.data);\n      fetchImages();\n    } catch (error) {\n      console.error('Error deleting image:', error);\n    }\n  };\n\n  const enableEditing = imageName => {\n    setEditingImage(imageName);\n    const image = images.find(img => img.imageName === imageName);\n    setNewName(image.name);\n    setNewJobPost(image.jobPost);\n  };\n\n  const handleUpdate = async imageName => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/update', {\n        imageName,\n        newName,\n        newJobPost\n      });\n      console.log('Image updated:', response.data);\n      setEditingImage(null);\n      setNewName('');\n      setNewJobPost('');\n      fetchImages();\n    } catch (error) {\n      console.error('Error updating image:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchImages();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"my-masonry\"],\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: wallSrc,\n        style: {\n          width: \"100%\"\n        },\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles[\"my-masnry-description\"]} flex`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles[\"my-masnry-user-box\"]} flex align-items-center`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"my-masnry-user-prof\"],\n            children: editingImage === image.imageName ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"button2\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"myinput\",\n                  type: \"text\",\n                  value: editedName,\n                  onChange: e => setEditedName(e.target.value),\n                  placeholder: \"Image Creator Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"myinput\",\n                  value: editedJob,\n                  onChange: e => setEditedJob(e.target.value),\n                  placeholder: \"Image Creator Job\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mybutton2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"mybutton\",\n                    onClick: handleUpdate,\n                    children: \"Save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"mybutton\",\n                    onClick: handleDelete,\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 13\n              }, this)\n            }, void 0, false) : /*#__PURE__*/_jsxDEV(\"img\", {\n              src: Edit,\n              alt: \"\",\n              onClick: enableEditing(image.imageName),\n              className: styles[\"edit\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${styles[\"my-masnry-user-prof-desc\"]} flex flex-column`,\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: editedName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: editedJob\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Delete,\n          alt: \"\",\n          className: styles[\"download\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: Links,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Download,\n            alt: \"\",\n            className: styles[\"download\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), \"))}\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(MasonryBox, \"POLbooq0aQ0neZ+s2IRFDXEsTR8=\");\n\n_c = MasonryBox;\nMasonryBox.propTypes = {\n  wallSrc: PropTypes.string.isRequired,\n  userName: PropTypes.string.isRequired,\n  userJob: PropTypes.string.isRequired,\n  Links: PropTypes.string.isRequired\n};\nexport default MasonryBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"MasonryBox\");","map":{"version":3,"sources":["F:/React/FinalProject-main/client/src/Components/MasonryLayout/MasonryBox/MasonryBox.jsx"],"names":["React","useState","useEffect","axios","styles","PropTypes","Download","Delete","Edit","MasonryBox","wallSrc","userName","userJob","Links","editing","setEditing","editedName","setEditedName","editedJob","setEditedJob","images","setImages","editingImage","setEditingImage","newName","setNewName","newJobPost","setNewJobPost","fetchImages","response","get","data","error","console","handleDelete","imageName","post","log","enableEditing","image","find","img","name","jobPost","handleUpdate","width","e","target","value","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from 'react';\nimport axios from 'axios'; // Import Axios library\nimport styles from \"./MasonryBox.module.css\"\nimport { PropTypes } from 'prop-types';\nimport Download from \"./Download.png\";\nimport Delete from './Delete.png';\nimport Edit from \"./Edit.png\";\nimport \"./mybutton.css\";\n\n\nconst MasonryBox = ({ wallSrc, userName, userJob, Links }) => {\n  const [editing, setEditing] = useState(false);\n  const [editedName, setEditedName] = useState(userName);\n  const [editedJob, setEditedJob] = useState(userJob);\n  const [images, setImages] = useState([]);\n  const [editingImage, setEditingImage] = useState(null);\n  const [newName, setNewName] = useState('');\n  const [newJobPost, setNewJobPost] = useState('');\n\n  const fetchImages = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/images');\n      setImages(response.data);\n    } catch (error) {\n      console.error('Error fetching images:', error);\n    }\n  };\n\n  const handleDelete = async (imageName) => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/delete', { imageName });\n      console.log('Image deleted:', response.data);\n      fetchImages();\n    } catch (error) {\n      console.error('Error deleting image:', error);\n    }\n  };\n  const enableEditing = (imageName) => {\n    setEditingImage(imageName);\n    const image = images.find((img) => img.imageName === imageName);\n    setNewName(image.name);\n    setNewJobPost(image.jobPost);\n  };\n  \n  const handleUpdate = async (imageName) => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/update', {\n        imageName,\n        newName,\n        newJobPost,\n      });\n      console.log('Image updated:', response.data);\n      setEditingImage(null);\n      setNewName('');\n      setNewJobPost('');\n      fetchImages();\n    } catch (error) {\n      console.error('Error updating image:', error);\n    }\n  };\n\n\n  useEffect(() => {\n    fetchImages();\n  }, []);\n\n  \n  return (\n    <>\n    <div className={styles[\"my-masonry\"]}>\n      \n      <img src={wallSrc} style={{ width: \"100%\" }} alt=\"\" />\n      <div className={`${styles[\"my-masnry-description\"]} flex`}>\n        <div className={`${styles[\"my-masnry-user-box\"]} flex align-items-center`}>\n          <div className={styles[\"my-masnry-user-prof\"]}>\n            {editingImage === image.imageName ?  (\n              <>\n            \n            <div className='button2'>\n                <input className='myinput'\n                  type=\"text\"\n                  value={editedName}\n                  onChange={e => setEditedName(e.target.value)}\n                  placeholder=\"Image Creator Name\"\n                />\n                <input\n                  type=\"text\" className='myinput'\n                  value={editedJob}\n                  onChange={e => setEditedJob(e.target.value)}\n                  placeholder=\"Image Creator Job\"\n                />\n            <div className=\"mybutton2\">\n                <button className=\"mybutton\"onClick={handleUpdate}>Save</button>\n                <button className=\"mybutton\"onClick={handleDelete}>Cancel</button>\n                </div>\n                </div>\n                \n              </>\n            ) : (\n              <img\n                src={Edit}\n                alt=\"\"\n                onClick={enableEditing(image.imageName)}\n                className={styles[\"edit\"]}\n              />\n            )}\n          </div>\n          \n          <div className={`${styles[\"my-masnry-user-prof-desc\"]} flex flex-column`}>\n            <h1>{editedName}</h1>\n            <h3>{editedJob}</h3>\n            \n          </div>\n        </div>\n        <img src={Delete} alt=\"\" className={styles[\"download\"]} />\n        <a href={Links}>\n          <img src={Download} alt=\"\" className={styles[\"download\"]} />\n        </a>     \n  \n\n      </div>\n        ))}\n    </div>\n    </>\n    \n    );\n}\n\nMasonryBox.propTypes = {\n  wallSrc: PropTypes.string.isRequired,\n  userName: PropTypes.string.isRequired,\n  userJob: PropTypes.string.isRequired,\n  Links: PropTypes.string.isRequired,\n}\n\nexport default MasonryBox;"]},"metadata":{},"sourceType":"module"}